; CPack install script designed for a nmake build

;--------------------------------
; You must define these values

  !define VERSION "@CPACK_PACKAGE_VERSION@"
  !define PATCH  "@CPACK_PACKAGE_VERSION_PATCH@"
  !define INST_DIR "@CPACK_TEMPORARY_DIRECTORY@"

;--------------------------------
;Variables

  Var MUI_TEMP
  Var STARTMENU_FOLDER
  Var SV_ALLUSERS
  Var START_MENU
  Var REGISTER_ACTIVEX
  Var REGISTER_FIREFOX
  Var REGISTER_OPERA

;--------------------------------
; Include x64 functions
  !include x64.nsh
;--------------------------------
;Include Modern UI

  !include "MUI.nsh"

  ;Default installation folder
  InstallDir "$PROGRAMFILES\@CPACK_PACKAGE_INSTALL_DIRECTORY@"  

;--------------------------------
; Include file functions
!include "FileFunc.nsh"
!insertmacro un.GetParent


;--------------------------------
;General

  ;Name and file
  Name "@CPACK_PACKAGE_START_MENU_NAME@"
  OutFile "@CPACK_TOPLEVEL_DIRECTORY@/@CPACK_OUTPUT_FILE_NAME@"
  
  VIProductVersion                 "@CPACK_PACKAGE_VERSION_MAJOR@.@CPACK_PACKAGE_VERSION_MINOR@.@CPACK_PACKAGE_VERSION_PATCH@.0"
  VIAddVersionKey ProductName      "MedX3D plugin"
  VIAddVersionKey Comments         "MedX3D plugin"
  VIAddVersionKey CompanyName      "@CPACK_PACKAGE_VENDOR@" ;this appear as "copyright" under Properties->Details
  VIAddVersionKey LegalCopyright   "@CPACK_PACKAGE_VENDOR@"
  VIAddVersionKey FileDescription  "MedX3D plugin. H3D plugin for browers with X3D MedX3D component support."
  VIAddVersionKey ProductVersion   @CPACK_PACKAGE_VERSION_MAJOR@.@CPACK_PACKAGE_VERSION_MINOR@
  VIAddVersionKey LegalTrademarks  "Pte Ltd"

  ;Set compression
  SetCompressor @CPACK_NSIS_COMPRESSOR@

;--------------------------------
; H3D Plugin added parameters.
; CPACK_ADD_PLUGINDOC_LINKS - If set to "ON" extra start menu links to documentation will be added.
; CPACK_ADD_PLUGIN_DEMOS_LINKS - If set to "ON" extra start menu links to plugin demos will be added.
;                                There will also be extra options for registering plugin.

;--------------------------------
; determine admin versus local install
; Is install for "AllUsers" or "JustMe"?
; Default to "JustMe" - set to "AllUsers" if admin or on Win9x
; This function is used for the very first "custom page" of the installer.
; This custom page does not show up visibly, but it executes prior to the
; first visible page and sets up $INSTDIR properly...
; Choose different default installation folder based on SV_ALLUSERS...
; "Program Files" for AllUsers, "My Documents" for JustMe...

Function .onInit
  StrCmp @CPACK_H3D_64_BIT@ "TRUE" 0 done_64_bit_checking
    ${If} ${RunningX64}
      DetailPrint "Installer running on 64-bit host"
      ; disable registry redirection (enable access to 64-bit portion of registry)
      ; This is needed in order to read correct registry information about python.
      SetRegView 64
    ${Else}
      MessageBox MB_OK "32 bit Windows detected. This installer is for 64 bit Windows. Installer will exit."
      Quit
    ${EndIf}
  done_64_bit_checking:
  StrCpy $SV_ALLUSERS "JustMe"
  StrCpy $INSTDIR "$DOCUMENTS\@CPACK_PACKAGE_INSTALL_DIRECTORY@"

  ClearErrors
  UserInfo::GetName
  IfErrors noLM
  Pop $0
  UserInfo::GetAccountType
  Pop $1
  StrCmp $1 "Admin" 0 +3
    SetShellVarContext all
    ;MessageBox MB_OK 'User "$0" is in the Admin group'
    StrCpy $SV_ALLUSERS "AllUsers"
    Goto done
  StrCmp $1 "Power" 0 +3
    SetShellVarContext all
    ;MessageBox MB_OK 'User "$0" is in the Power Users group'
    StrCpy $SV_ALLUSERS "AllUsers"
    Goto done
    
  noLM:
    StrCpy $SV_ALLUSERS "AllUsers"
    ;Get installation folder from registry if available

  done:
  StrCmp $SV_ALLUSERS "AllUsers" 0 +2
    StrCpy $INSTDIR "$PROGRAMFILES\@CPACK_PACKAGE_INSTALL_DIRECTORY@"

  StrCmp "@CPACK_REGISTER_PLUGINS@" "ON" 0 noOptionsPage
    !insertmacro MUI_INSTALLOPTIONS_EXTRACT "NSIS.InstallOptions.ini"

  noOptionsPage:
FunctionEnd

;--------------------------------
;Interface Settings

  !define MUI_HEADERIMAGE
  !define MUI_ABORTWARNING

;--------------------------------
; path functions

!verbose 3
!include "WinMessages.NSH"
!verbose 4

;------------------------------------------
; Find mozilla plugin path macro
!macro MozillaPluginDir
 
  Push $R0
  Push $R1
  Push $R2
 
  !define Index 'Line${__LINE__}'
  StrCpy $R1 "0"
 
  "${Index}-Loop:"
 
  ; Check for Key
  EnumRegKey $R0 HKLM "SOFTWARE\Mozilla" "$R1"
  StrCmp $R0 "" "${Index}-End"
  IntOp $R1 $R1 + 1
  ReadRegStr $R2 HKLM "SOFTWARE\Mozilla\$R0\Extensions" "Plugins"
  StrCmp $R2 "" "${Index}-Loop" "${Index}-End"
 
  "${Index}-End:"
 
  !undef Index
 
  Push $R2
  Exch 3
  Pop $R2
  Pop $R1
  Pop $R0
 
!macroend

;------------------------------------------
; Find mozilla plugin path macro
!macro OperaPluginDir
  ; Check for Key
  ReadRegStr $R0 HKCU "Software\Opera Software" "Plugin Path"
  StrCmp $R0 "" +2 0
    Push $R0
!macroend


 
;----------------------------------------
; based upon a script of "Written by KiCHiK 2003-01-18 05:57:02"
;----------------------------------------
!verbose 3
!include "WinMessages.NSH"
!verbose 4
;====================================================
; get_NT_environment 
;     Returns: the selected environment
;     Output : head of the stack
;====================================================
!macro select_NT_profile UN
Function ${UN}select_NT_profile
   StrCmp $REGISTER_FIREFOX "1" 0 environment_single
      DetailPrint "Selected environment for all users"
      Push "all"
      Return
   environment_single:
      DetailPrint "Selected environment for current user only."
      Push "current"
      Return
FunctionEnd
!macroend
!insertmacro select_NT_profile ""
!insertmacro select_NT_profile "un."
;----------------------------------------------------
!define NT_current_env 'HKCU "Environment"'
!define NT_all_env     'HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"'

!ifndef WriteEnvStr_RegKey
  !ifdef ALL_USERS
    !define WriteEnvStr_RegKey \
       'HKLM "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"'
  !else
    !define WriteEnvStr_RegKey 'HKCU "Environment"'
  !endif
!endif
 
; AddToPath - Adds the given dir to the search path.
;        Input - head of the stack
;        Note - Win9x systems requires reboot
 
Function AddToPath
  Exch $0
  Push $1
  Push $2
  Push $3
 
  # don't add if the path doesn't exist
  IfFileExists "$0\*.*" "" AddToPath_done
 
  ReadEnvStr $1 PATH
  Push "$1;"
  Push "$0;"
  Call StrStr
  Pop $2
  StrCmp $2 "" "" AddToPath_done
  Push "$1;"
  Push "$0\;"
  Call StrStr
  Pop $2
  StrCmp $2 "" "" AddToPath_done
  GetFullPathName /SHORT $3 $0
  Push "$1;"
  Push "$3;"
  Call StrStr
  Pop $2
  StrCmp $2 "" "" AddToPath_done
  Push "$1;"
  Push "$3\;"
  Call StrStr
  Pop $2
  StrCmp $2 "" "" AddToPath_done
 
  Call IsNT
  Pop $1
  StrCmp $1 1 AddToPath_NT
    ; Not on NT
    StrCpy $1 $WINDIR 2
    FileOpen $1 "$1\autoexec.bat" a
    FileSeek $1 -1 END
    FileReadByte $1 $2
    IntCmp $2 26 0 +2 +2 # DOS EOF
      FileSeek $1 -1 END # write over EOF
    FileWrite $1 "$\r$\nSET PATH=%PATH%;$3$\r$\n"
    FileClose $1
    SetRebootFlag true
    Goto AddToPath_done
 
  AddToPath_NT:
    StrCmp $REGISTER_FIREFOX "1" 0 +3
      ReadRegStr $1 ${NT_all_env} "PATH"
      Goto +2
      ReadRegStr $1 ${NT_current_env} "PATH"
    StrCmp $1 "" AddToPath_NTdoIt
      Push $1
      Call Trim
      Pop $1
      StrCpy $0 "$1;$0"
    AddToPath_NTdoIt:
      StrCmp $REGISTER_FIREFOX "1" 0 +3
        WriteRegExpandStr ${NT_all_env} "PATH" $0
        Goto +2
        WriteRegExpandStr ${NT_current_env} "PATH" $0
      SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000
 
  AddToPath_done:
    Pop $3
    Pop $2
    Pop $1
    Pop $0
FunctionEnd
 
 
; RemoveFromPath - Remove a given dir from the path
;     Input: head of the stack
 
Function un.RemoveFromPath
  Exch $0
  Push $1
  Push $2
  Push $3
  Push $4
  Push $5
  Push $6
 
  IntFmt $6 "%c" 26 # DOS EOF
 
  Call un.IsNT
  Pop $1
  StrCmp $1 1 unRemoveFromPath_NT
    ; Not on NT
    StrCpy $1 $WINDIR 2
    FileOpen $1 "$1\autoexec.bat" r
    GetTempFileName $4
    FileOpen $2 $4 w
    GetFullPathName /SHORT $0 $0
    StrCpy $0 "SET PATH=%PATH%;$0"
    Goto unRemoveFromPath_dosLoop
 
    unRemoveFromPath_dosLoop:
      FileRead $1 $3
      StrCpy $5 $3 1 -1 # read last char
      StrCmp $5 $6 0 +2 # if DOS EOF
        StrCpy $3 $3 -1 # remove DOS EOF so we can compare
      StrCmp $3 "$0$\r$\n" unRemoveFromPath_dosLoopRemoveLine
      StrCmp $3 "$0$\n" unRemoveFromPath_dosLoopRemoveLine
      StrCmp $3 "$0" unRemoveFromPath_dosLoopRemoveLine
      StrCmp $3 "" unRemoveFromPath_dosLoopEnd
      FileWrite $2 $3
      Goto unRemoveFromPath_dosLoop
      unRemoveFromPath_dosLoopRemoveLine:
        SetRebootFlag true
        Goto unRemoveFromPath_dosLoop
 
    unRemoveFromPath_dosLoopEnd:
      FileClose $2
      FileClose $1
      StrCpy $1 $WINDIR 2
      Delete "$1\autoexec.bat"
      CopyFiles /SILENT $4 "$1\autoexec.bat"
      Delete $4
      Goto unRemoveFromPath_done
 
  unRemoveFromPath_NT:
    StrCmp $REGISTER_FIREFOX "1" 0 +3
      ReadRegStr $1 ${NT_all_env} "PATH"
      Goto +2
      ReadRegStr $1 ${NT_current_env} "PATH"
    StrCpy $5 $1 1 -1 # copy last char
    StrCmp $5 ";" +2 # if last char != ;
      StrCpy $1 "$1;" # append ;
    Push $1
    Push "$0;"
    Call un.StrStr ; Find `$0;` in $1
    Pop $2 ; pos of our dir
    StrCmp $2 "" unRemoveFromPath_done
      ; else, it is in path
      # $0 - path to add
      # $1 - path var
      StrLen $3 "$0;"
      StrLen $4 $2
      StrCpy $5 $1 -$4 # $5 is now the part before the path to remove
      StrCpy $6 $2 "" $3 # $6 is now the part after the path to remove
      StrCpy $3 $5$6
 
      StrCpy $5 $3 1 -1 # copy last char
      StrCmp $5 ";" 0 +2 # if last char == ;
        StrCpy $3 $3 -1 # remove last char
 
      StrCmp $REGISTER_FIREFOX "1" 0 +3
        WriteRegExpandStr ${NT_all_env} "PATH" $3
        Goto +2
        WriteRegExpandStr ${NT_current_env} "PATH" $3
      SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} 0 "STR:Environment" /TIMEOUT=5000
 
  unRemoveFromPath_done:
    Pop $6
    Pop $5
    Pop $4
    Pop $3
    Pop $2
    Pop $1
    Pop $0
FunctionEnd

#
# WriteEnvStr - Writes an environment variable
# Note: Win9x systems requires reboot
#
# Example:
#  Push "HOMEDIR"           # name
#  Push "C:\New Home Dir\"  # value
#  Call WriteEnvStr
#
Function WriteEnvStr
  Exch $1 ; $1 has environment variable value
  Exch
  Exch $0 ; $0 has environment variable name
  Push $2
 
  Call IsNT
  Pop $2
  StrCmp $2 1 WriteEnvStr_NT
    ; Not on NT
    StrCpy $2 $WINDIR 2 ; Copy drive of windows (c:)
    FileOpen $2 "$2\autoexec.bat" a
    FileSeek $2 0 END
    FileWrite $2 "$\r$\nSET $0=$1$\r$\n"
    FileClose $2
    SetRebootFlag true
    Goto WriteEnvStr_done
 
  WriteEnvStr_NT:
      StrCmp $REGISTER_FIREFOX "1" 0 +3
        WriteRegExpandStr ${NT_all_env} $0 $1
        Goto +2
        WriteRegExpandStr ${NT_current_env} $0 $1
      SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} \
        0 "STR:Environment" /TIMEOUT=5000
 
  WriteEnvStr_done:
    Pop $2
    Pop $0
    Pop $1
FunctionEnd
 
#
# un.DeleteEnvStr - Removes an environment variable
# Note: Win9x systems requires reboot
#
# Example:
#  Push "HOMEDIR"           # name
#  Call un.DeleteEnvStr
#
Function un.DeleteEnvStr
  Exch $0 ; $0 now has the name of the variable
  Push $1
  Push $2
  Push $3
  Push $4
  Push $5
 
  Call un.IsNT
  Pop $1
  StrCmp $1 1 DeleteEnvStr_NT
    ; Not on NT
    StrCpy $1 $WINDIR 2
    FileOpen $1 "$1\autoexec.bat" r
    GetTempFileName $4
    FileOpen $2 $4 w
    StrCpy $0 "SET $0="
    SetRebootFlag true
 
    DeleteEnvStr_dosLoop:
      FileRead $1 $3
      StrLen $5 $0
      StrCpy $5 $3 $5
      StrCmp $5 $0 DeleteEnvStr_dosLoop
      StrCmp $5 "" DeleteEnvStr_dosLoopEnd
      FileWrite $2 $3
      Goto DeleteEnvStr_dosLoop
 
    DeleteEnvStr_dosLoopEnd:
      FileClose $2
      FileClose $1
      StrCpy $1 $WINDIR 2
      Delete "$1\autoexec.bat"
      CopyFiles /SILENT $4 "$1\autoexec.bat"
      Delete $4
      Goto DeleteEnvStr_done
 
  DeleteEnvStr_NT:
    StrCmp $REGISTER_FIREFOX "1" 0 +3
      DeleteRegValue ${NT_all_env} $0
      Goto +2
      DeleteRegValue ${NT_current_env} $0
    SendMessage ${HWND_BROADCAST} ${WM_WININICHANGE} \
      0 "STR:Environment" /TIMEOUT=5000
 
  DeleteEnvStr_done:
    Pop $5
    Pop $4
    Pop $3
    Pop $2
    Pop $1
    Pop $0
FunctionEnd 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Uninstall stuff
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 
###########################################
#            Utility Functions            #
###########################################
 
;====================================================
; IsNT - Returns 1 if the current system is NT, 0
;        otherwise.
;     Output: head of the stack
;====================================================
; IsNT
; no input
; output, top of the stack = 1 if NT or 0 if not
;
; Usage:
;   Call IsNT
;   Pop $R0
;  ($R0 at this point is 1 or 0)
 
!macro IsNT un
Function ${un}IsNT
  Push $0
  ReadRegStr $0 HKLM "SOFTWARE\Microsoft\Windows NT\CurrentVersion" CurrentVersion
  StrCmp $0 "" 0 IsNT_yes
  ; we are not NT.
  Pop $0
  Push 0
  Return
 
  IsNT_yes:
    ; NT!!!
    Pop $0
    Push 1
FunctionEnd
!macroend
!insertmacro IsNT ""
!insertmacro IsNT "un."
 
; StrStr
; input, top of stack = string to search for
;        top of stack-1 = string to search in
; output, top of stack (replaces with the portion of the string remaining)
; modifies no other variables.
;
; Usage:
;   Push "this is a long ass string"
;   Push "ass"
;   Call StrStr
;   Pop $R0
;  ($R0 at this point is "ass string")
 
!macro StrStr un
Function ${un}StrStr
Exch $R1 ; st=haystack,old$R1, $R1=needle
  Exch    ; st=old$R1,haystack
  Exch $R2 ; st=old$R1,old$R2, $R2=haystack
  Push $R3
  Push $R4
  Push $R5
  StrLen $R3 $R1
  StrCpy $R4 0
  ; $R1=needle
  ; $R2=haystack
  ; $R3=len(needle)
  ; $R4=cnt
  ; $R5=tmp
  loop:
    StrCpy $R5 $R2 $R3 $R4
    StrCmp $R5 $R1 done
    StrCmp $R5 "" done
    IntOp $R4 $R4 + 1
    Goto loop
done:
  StrCpy $R1 $R2 "" $R4
  Pop $R5
  Pop $R4
  Pop $R3
  Pop $R2
  Exch $R1
FunctionEnd
!macroend
!insertmacro StrStr ""
!insertmacro StrStr "un."

Function Trim ; Added by Pelaca
	Exch $R1
	Push $R2
Loop:
	StrCpy $R2 "$R1" 1 -1
	StrCmp "$R2" " " RTrim
	StrCmp "$R2" "$\n" RTrim
	StrCmp "$R2" "$\r" RTrim
	StrCmp "$R2" ";" RTrim
	GoTo Done
RTrim:	
	StrCpy $R1 "$R1" -1
	Goto Loop
Done:
	Pop $R2
	Exch $R1
FunctionEnd

Function ConditionalAddToRegisty
  Pop $0
  Pop $1
  StrCmp "$0" "" ConditionalAddToRegisty_EmptyString
    WriteRegStr SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@" \
    "$1" "$0"
    ;MessageBox MB_OK "Set Registry: '$1' to '$0'"
    DetailPrint "Set install registry entry: '$1' to '$0'"
  ConditionalAddToRegisty_EmptyString:
FunctionEnd

;------------------------

;--------------------------------
; Define some macro setting for the gui

  !define CPACK_PACKAGE_ICON@CPACK_PACKAGE_ICON@
  !ifndef CPACK_PACKAGE_ICON
  !define MUI_HEADERIMAGE_BITMAP "@CPACK_PACKAGE_ICON@"
  !endif

;--------------------------------
;Pages
  !define MUI_WELCOMEPAGE_TEXT  'This wizard will guide you through the installation of @CPACK_PACKAGE_START_MENU_NAME@.\r\n\r\n\
It is recommended that you close all other applications before starting Setup. This will make it possible to update relevant system files without having to reboot your computer.\r\n\r\n\
Click Next to continue.'
  !insertmacro MUI_PAGE_WELCOME

  !insertmacro MUI_PAGE_LICENSE "@CPACK_RESOURCE_FILE_LICENSE@"
  Page custom InstallOptionsPage
  !insertmacro MUI_PAGE_DIRECTORY
  
  ;Start Menu Folder Page Configuration
  !define MUI_STARTMENUPAGE_REGISTRY_ROOT "SHCTX" 
  !define MUI_STARTMENUPAGE_REGISTRY_KEY "Software\@CPACK_PACKAGE_VENDOR@\@CPACK_PACKAGE_INSTALL_REGISTRY_KEY@" 
  !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "Start Menu Folder"
  !insertmacro MUI_PAGE_STARTMENU Application $STARTMENU_FOLDER

  !insertmacro MUI_PAGE_INSTFILES
  ;!insertmacro MUI_PAGE_FINISH

  !insertmacro MUI_UNPAGE_CONFIRM
  !insertmacro MUI_UNPAGE_INSTFILES
  
;--------------------------------
;Languages
 
  !insertmacro MUI_LANGUAGE "English"

;--------------------------------
;Reserve Files

  ;These files should be inserted before other files in the data block
  ;Keep these lines before any File command
  ;Only for solid compression (by default, solid compression is enabled for BZIP2 and LZMA)

  ReserveFile "NSIS.InstallOptions.ini"
  !insertmacro MUI_RESERVEFILE_INSTALLOPTIONS


;--------------------------------
;Installer Sections

Section "Add to path"
  ;Read a value from an InstallOptions INI file
  !insertmacro MUI_INSTALLOPTIONS_READ $REGISTER_ACTIVEX "NSIS.InstallOptions.ini" "Field 2" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $REGISTER_FIREFOX "NSIS.InstallOptions.ini" "Field 3" "State"
  !insertmacro MUI_INSTALLOPTIONS_READ $REGISTER_OPERA "NSIS.InstallOptions.ini" "Field 4" "State"
SectionEnd

Section "Installer Section" InstSection

  ;Use the entire tree produced by the INSTALL target.  Keep the
  ;list of directories here in sync with the RMDir commands below.
  SetOutPath "$INSTDIR"
  File /r "${INST_DIR}\*.*"

  ;Store installation folder
  WriteRegStr SHCTX "Software\@CPACK_PACKAGE_VENDOR@\@CPACK_PACKAGE_INSTALL_REGISTRY_KEY@" "" $INSTDIR
  
  ;Create uninstaller
  WriteUninstaller "$INSTDIR\@CPACK_PACKAGE_START_MENU_NAME@Uninstall.exe"
  Push "DisplayName"
  Push "@CPACK_NSIS_DISPLAY_NAME@"
  Call ConditionalAddToRegisty
  Push "DisplayVersion"
  Push "@CPACK_PACKAGE_VERSION@"
  Call ConditionalAddToRegisty
  Push "Publisher"
  Push "@CPACK_PACKAGE_VENDOR@"
  Call ConditionalAddToRegisty
  Push "UninstallString"
  Push "$INSTDIR\@CPACK_PACKAGE_START_MENU_NAME@Uninstall.exe"
  Call ConditionalAddToRegisty

  ; Optional registration
  Push "DisplayIcon"
  Push "$INSTDIR\@CPACK_NSIS_INSTALLED_ICON_NAME@"
  Call ConditionalAddToRegisty
  Push "HelpLink"
  Push "@CPACK_NSIS_HELP_LINK@"
  Call ConditionalAddToRegisty
  Push "URLInfoAbout"
  Push "@CPACK_NSIS_URL_INFO_ABOUT@"
  Call ConditionalAddToRegisty
  Push "Contact"
  Push "@CPACK_NSIS_CONTACT@"
  Call ConditionalAddToRegisty

  !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    
  ;Create shortcuts
  CreateDirectory "$SMPROGRAMS\$STARTMENU_FOLDER"
@CPACK_NSIS_CREATE_ICONS@

  SetOutPath "$INSTDIR\examples"
  StrCmp "@CPACK_ADD_PLUGIN_DEMOS_LINKS@" "ON" 0 +5
    ;Create PluginDemo folder
    CreateDirectory "$SMPROGRAMS\$STARTMENU_FOLDER\PluginDemos"
    
    ;Add Example shortcuts
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\PluginDemos\Web3D ClickToAnimate.lnk" '"http://www.web3d.org/x3d/content/examples/Basic/X3dSpecification/_pages/page05.html"' 
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\PluginDemos\Local haptics example.lnk" '"$INSTDIR\examples\haptics_scene.html"' 
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\PluginDemos\Internet haptics example.lnk" '"http://www.h3dapi.org/uploads/H3DPluginExamples/haptics_scene.html"'

  SetOutPath "$INSTDIR"

  StrCmp "@CPACK_ADD_PLUGINDOC_LINKS@" "ON" 0 +2
    ; Add link to readme.txt
    CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\Readme.lnk" "$INSTDIR\Readme.txt"

  CreateShortCut "$SMPROGRAMS\$STARTMENU_FOLDER\Uninstall.lnk" "$INSTDIR\@CPACK_PACKAGE_START_MENU_NAME@Uninstall.exe"

  ; Write special uninstall registry entries
  Push "StartMenu"
  Push "$STARTMENU_FOLDER"
  Call ConditionalAddToRegisty
  Push "RegisterActiveX"
  Push "$REGISTER_ACTIVEX"
  Call ConditionalAddToRegisty
  StrCmp $REGISTER_ACTIVEX "1" 0 +3
    DetailPrint "Register ActiveX plugin"
    ExecWait '"regsvr32" "$INSTDIR\bin\H3DPluginActiveX_vc9.dll"'
  Push "RegisterFireFox"
  Push "$REGISTER_FIREFOX"
  Call ConditionalAddToRegisty
  StrCmp $REGISTER_FIREFOX "1" 0 SkipRegisterFirefox
    !insertmacro MozillaPluginDir
    Pop $R0
    StrCmp $R0 "" +14 0
      DetailPrint "Register Mozilla Firefox plugin"
      CopyFiles $INSTDIR\bin\npH3D32.dll $R0
      CopyFiles $INSTDIR\bin\msvcr71.dll $R0
      StrCmp "@CPACK_MSVCR71_BINARIES@" "ON" 0 +2
        CopyFiles $INSTDIR\bin\MSVCP71.dll $R0
      StrCmp "@CPACK_MSVCR80_BINARIES@" "ON" 0 +4
        CopyFiles $INSTDIR\bin\msvcr80.dll $R0
        CopyFiles $INSTDIR\bin\msvcp80.dll $R0
        CopyFiles $INSTDIR\bin\Microsoft.VC80.CRT.manifest $R0
      StrCmp "@CPACK_MSVCR90_BINARIES@" "ON" 0 +4
        CopyFiles $INSTDIR\bin\msvcr90.dll $R0
        CopyFiles $INSTDIR\bin\msvcp90.dll $R0
        CopyFiles $INSTDIR\bin\Microsoft.VC90.CRT.manifest $R0
  SkipRegisterFirefox:

  Push "RegisterOpera"
  Push "$REGISTER_OPERA"
  Call ConditionalAddToRegisty
  StrCmp $REGISTER_OPERA "1" 0 SkipRegisterOpera
    !insertmacro OperaPluginDir
    Pop $R0
    StrCmp $R0 "" +14 0
      DetailPrint "Register Opera plugin"
      CopyFiles $INSTDIR\bin\npH3D32.dll $R0
      CopyFiles $INSTDIR\bin\msvcr71.dll $R0
      StrCmp "@CPACK_MSVCR71_BINARIES@" "ON" 0 +2
        CopyFiles $INSTDIR\bin\MSVCP71.dll $R0
      StrCmp "@CPACK_MSVCR80_BINARIES@" "ON" 0 +4
        CopyFiles $INSTDIR\bin\msvcr80.dll $R0
        CopyFiles $INSTDIR\bin\msvcp80.dll $R0
        CopyFiles $INSTDIR\bin\Microsoft.VC80.CRT.manifest $R0
      StrCmp "@CPACK_MSVCR90_BINARIES@" "ON" 0 +4
        CopyFiles $INSTDIR\bin\msvcr90.dll $R0
        CopyFiles $INSTDIR\bin\msvcp90.dll $R0
        CopyFiles $INSTDIR\bin\Microsoft.VC90.CRT.manifest $R0
  SkipRegisterOpera:

  ; Must be added to path for opera or firefox.
  StrCmp $REGISTER_OPERA "1" +2 +4
  StrCmp $REGISTER_FIREFOX "1" 0 +3
    Push $INSTDIR\bin
    Call AddToPath

@CPACK_NSIS_EXTRA_INSTALL_COMMANDS@

  !insertmacro MUI_STARTMENU_WRITE_END

SectionEnd

;--------------------------------
; Create custom pages
Function InstallOptionsPage
  !insertmacro MUI_HEADER_TEXT "Install Options" "Chose options for installing @CPACK_PACKAGE_INSTALL_DIRECTORY@"
  !insertmacro MUI_INSTALLOPTIONS_DISPLAY "NSIS.InstallOptions.ini"

FunctionEnd

;--------------------------------
; determine admin versus local install
Function un.onInit
  StrCmp @CPACK_H3D_64_BIT@ "TRUE" 0 done_64_bit_checking_uninit
    ${If} ${RunningX64}
      DetailPrint "Installer running on 64-bit host"
      ; disable registry redirection (enable access to 64-bit portion of registry)
      ; This is needed in order to read correct registry information about python.
      SetRegView 64
    ${EndIf}
  done_64_bit_checking_uninit:

  ClearErrors
  UserInfo::GetName
  IfErrors noLM
  Pop $0
  UserInfo::GetAccountType
  Pop $1
  StrCmp $1 "Admin" 0 +3
    SetShellVarContext all
    ;MessageBox MB_OK 'User "$0" is in the Admin group'
    Goto done
  StrCmp $1 "Power" 0 +3
    SetShellVarContext all
    ;MessageBox MB_OK 'User "$0" is in the Power Users group'
    Goto done
    
  noLM:
    ;Get installation folder from registry if available

  done:
FunctionEnd

;--------------------------------
;Uninstaller Section

Section "Uninstall"
  ReadRegStr $START_MENU SHCTX \
   "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@" "StartMenu"
  ;MessageBox MB_OK "Start menu is in: $START_MENU"
  ReadRegStr $REGISTER_ACTIVEX SHCTX \
    "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@" "RegisterActiveX"
  StrCmp $REGISTER_ACTIVEX "1" 0 +3
    DetailPrint "Unregister ActiveX plugin"
    ExecWait '"regsvr32" "-u" "$INSTDIR\bin\H3DPluginActiveX_vc9.dll"'
  ReadRegStr $REGISTER_FIREFOX SHCTX \
    "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@" "RegisterFireFox"
  StrCmp $REGISTER_FIREFOX "1" 0 SkipUnRegisterFirefox
    !insertmacro MozillaPluginDir
    Pop $R0
    StrCmp $R0 "" +14 0
      DetailPrint "Unregister Mozilla Firefox plugin"
      Delete $R0\npH3D32.dll
      Delete $R0\msvcr71.dll
      StrCmp "@CPACK_MSVCR71_BINARIES@" "ON" 0 +2
        Delete $R0\MSVCP71.dll
      StrCmp "@CPACK_MSVCR80_BINARIES@" "ON" 0 +4
        Delete $R0\msvcr80.dll
        Delete $R0\msvcp80.dll
        Delete $R0\Microsoft.VC80.CRT.manifest
      StrCmp "@CPACK_MSVCR90_BINARIES@" "ON" 0 +4
        Delete $R0\msvcr90.dll
        Delete $R0\msvcp90.dll
        Delete $R0\Microsoft.VC90.CRT.manifest
  SkipUnRegisterFirefox:

  ReadRegStr $REGISTER_OPERA SHCTX \
    "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@" "RegisterOpera"
  StrCmp $REGISTER_OPERA "1" 0 SkipUnRegisterOpera
    !insertmacro OperaPluginDir
    Pop $R0
    StrCmp $R0 "" +14 0
      DetailPrint "Unregister Opera plugin"
      Delete $R0\npH3D32.dll
      Delete $R0\msvcr71.dll
      StrCmp "@CPACK_MSVCR71_BINARIES@" "ON" 0 +2
        Delete $R0\MSVCP71.dll
      StrCmp "@CPACK_MSVCR80_BINARIES@" "ON" 0 +4
        Delete $R0\msvcr80.dll
        Delete $R0\msvcp80.dll
        Delete $R0\Microsoft.VC80.CRT.manifest
      StrCmp "@CPACK_MSVCR90_BINARIES@" "ON" 0 +4
        Delete $R0\msvcr90.dll
        Delete $R0\msvcp90.dll
        Delete $R0\Microsoft.VC90.CRT.manifest
  SkipUnRegisterOpera:

@CPACK_NSIS_EXTRA_UNINSTALL_COMMANDS@

  ;Remove files we installed.
  ;Keep the list of directories here in sync with the File commands above.
@CPACK_NSIS_DELETE_FILES@
@CPACK_NSIS_DELETE_DIRECTORIES@

  ;Remove the uninstaller itself.
  Delete "$INSTDIR\@CPACK_PACKAGE_START_MENU_NAME@Uninstall.exe"
  DeleteRegKey SHCTX "Software\Microsoft\Windows\CurrentVersion\Uninstall\@CPACK_PACKAGE_INSTALL_DIRECTORY@"

  ;Remove the installation directory if it is empty.
  RMDir "$INSTDIR"
  ; Remove the parent directory if it is empty, this might be the H3D directory.
  ${un.GetParent} $INSTDIR $R0
  RMDir "$R0"

  ; Remove the registry entries.
  DeleteRegKey SHCTX "Software\@CPACK_PACKAGE_VENDOR@\@CPACK_PACKAGE_INSTALL_REGISTRY_KEY@"

  !insertmacro MUI_STARTMENU_GETFOLDER Application $MUI_TEMP
    
  Delete "$SMPROGRAMS\$MUI_TEMP\Uninstall.lnk"
@CPACK_NSIS_DELETE_ICONS@
  
  StrCmp "@CPACK_ADD_PLUGIN_DEMOS_LINKS@" "ON" 0 +5
    ;Delete Demos menu links
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Web3D ClickToAnimate.lnk"
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Local haptics example.lnk"
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Internet haptics example.lnk"

    ;Delete the Demos folder in start menu
    RMDir "$SMPROGRAMS\$MUI_TEMP\PluginDemos"

  StrCmp "@CPACK_ADD_PLUGINDOC_LINKS@" "ON" 0 +2
    ; Remove links to documentation
    Delete "$SMPROGRAMS\$MUI_TEMP\Readme.lnk"

  ;Delete empty start menu parent diretories
  StrCpy $MUI_TEMP "$SMPROGRAMS\$MUI_TEMP"
 
  startMenuDeleteLoop:
    ClearErrors
    RMDir $MUI_TEMP
    GetFullPathName $MUI_TEMP "$MUI_TEMP\.."
    
    IfErrors startMenuDeleteLoopDone
  
    StrCmp "$MUI_TEMP" "$SMPROGRAMS" startMenuDeleteLoopDone startMenuDeleteLoop
  startMenuDeleteLoopDone:

  ; If the user changed the shortcut, then untinstall may not work. This should
  ; try to fix it.
  StrCpy $MUI_TEMP "$START_MENU"
  Delete "$SMPROGRAMS\$MUI_TEMP\Uninstall.lnk"
@CPACK_NSIS_DELETE_ICONS@
  
  StrCmp "@CPACK_ADD_PLUGIN_DEMOS_LINKS@" "ON" 0 +5
    ;Delete Demos menu links
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Web3D ClickToAnimate.lnk"
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Local haptics example.lnk"
    Delete "$SMPROGRAMS\$MUI_TEMP\PluginDemos\Internet haptics example.lnk"

    ;Delete the Demos folder in start menu
    RMDir "$SMPROGRAMS\$MUI_TEMP\PluginDemos"

  StrCmp "@CPACK_ADD_PLUGINDOC_LINKS@" "ON" 0 +2
    ; Remove links to documentation
    Delete "$SMPROGRAMS\$MUI_TEMP\Readme.lnk"
  
  ;Delete empty start menu parent diretories
  StrCpy $MUI_TEMP "$SMPROGRAMS\$MUI_TEMP"
 
  secondStartMenuDeleteLoop:
    ClearErrors
    RMDir $MUI_TEMP
    GetFullPathName $MUI_TEMP "$MUI_TEMP\.."
    
    IfErrors secondStartMenuDeleteLoopDone
  
    StrCmp "$MUI_TEMP" "$SMPROGRAMS" secondStartMenuDeleteLoopDone secondStartMenuDeleteLoop
  secondStartMenuDeleteLoopDone:

  DeleteRegKey /ifempty SHCTX "Software\@CPACK_PACKAGE_VENDOR@\@CPACK_PACKAGE_INSTALL_REGISTRY_KEY@"

  ; Important to remove from path after done.
  ; Must be removed if plugin registered for opera or firefox.
  StrCmp $REGISTER_OPERA "1" +2 +4
  StrCmp $REGISTER_FIREFOX "1" 0 +3
    Push $INSTDIR\bin
    Call un.RemoveFromPath

SectionEnd


